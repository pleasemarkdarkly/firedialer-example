export declare const DAY_ABBREVIATED: string[];
export declare const DAY: string[];
export declare const PST_OFFSET = 8;
export declare type DateRange = {
    fromDate: Date;
    toDate: Date;
};
export declare const dateFormatISO8601: RegExp;
export declare const dateToStr: (date: Date) => any;
export declare const strToDate: (date: string) => any;
export declare const startDate: Date;
export declare const getCurrentMonthStart: Date;
export declare const serviceStartDate: Date;
export declare const formatDate: (date: Date) => string;
export declare const formatDateWithDivider: (date: Date, divider?: string) => string;
export declare const compactLoggingDateTime: () => string;
export declare const compactLoggingTime: () => any;
export declare const eightCharDate: (date: Date) => any;
export declare const isDate: (dateStr: string) => boolean;
export declare const parseDate: (date: string) => Date | undefined;
export declare const twelveCharDate: (date: Date) => string;
export declare const compactDateTime: (date: Date) => string;
export declare const compactTimeStamp: (date: Date) => string;
export declare const compactTimeStampManual: (date: Date) => string;
export declare const sixteenCharDate: (date: Date) => string;
export declare const convertUTCDateToLocalDate: (date: Date) => Date;
export declare const formatDateTime: (date: Date) => string;
export declare const DEFAULT_START_DATE: Date;
export declare const TWO_YEARS_AGO_DATE: Date;
export declare const ONE_YEAR_AGO_DATE: Date;
export declare const TWO_MONTHS_AGO_DATE: Date;
export declare const ONE_MONTH_AGO_DATE: Date;
export declare const THREE_WEEKS_AGO_DATE: Date;
export declare const FORTNIGHT_DATE: Date;
export declare const LAST_WEEK_DATE: Date;
export declare const TEN_DAYS_AGO_DATE: Date;
export declare const THREE_DAYS_AGO_DATE: Date;
export declare const YESTERDAY_DATE: Date;
export declare const TODAY_DATE: Date;
export declare const defaultStartDate: Date;
export declare const twoYearsAgoDate: Date;
export declare const twoMonthsAgoStartDate: Date;
export declare const oneMonthAgoStartDate: Date;
export declare const threeWeeksAgoStartDate: Date;
export declare const fortnightStartDate: Date;
export declare const lastWeekStartDate: Date;
export declare const threeDaysAgoDate: Date;
export declare const yesterdayStartDate: Date;
export declare const todayStartDate: Date;
export declare const FROM_DATE: Date;
export declare const TO_DATE: Date;
export declare const isWeekend: (day: number) => boolean;
export declare const isOfficeHours: (hour: number) => boolean;
export declare const getMonthDateRange: (dateRange: {
    fromDate: string;
    toDate: string;
}) => any;
export declare const getDaysDateRange: (dateRange: {
    fromDate: string | Date;
    toDate: string | Date;
}) => any;
export declare const makeTime: (firebaseTimestamp: {
    _seconds: number;
    _nanoseconds: number;
}) => Date | null;
export declare const dateInPast: (firstDate: Date, secondDate: Date) => boolean;
export declare function getWeekNumber(year: number, month: number, dDate: number): number;
export declare const holidays: {
    '0,1,1': string;
    '0,3,15': string;
    '1,4,22': string;
    '1,2,1': string;
    '6,4,30': string;
    '7,1,4': string;
    '8,1,7': string;
    '10,2,11': string;
    '9,2,14': string;
    '10,3,28': string;
    '11,4,25': string;
    '11,4,31': string;
};
export declare const floatingHolidays: {
    '0,3,1': string;
    '4,4,1': string;
    '8,1,1': string;
    '9,2,1': string;
    '10,4,5': string;
};
export declare const shiftForHoliday: (year: number, month: number, week: number, date: number) => {
    m: number;
    w: number;
    d: number;
};
export declare const getNextBusinessSlot: (date: Date) => Date;
export declare const incrementTime: (timestamp?: Date, seconds?: number) => Date;
export declare const addMinutesToDate: (date: any, minutes: any) => Date;
//# sourceMappingURL=dates.d.ts.map